# =============== tomcat =============== 
# port
server.port=8080


# =============== \u6570\u636e\u6e90\u914d\u7f6e ===============
# \u6570\u636e\u6e90\u9a71\u52a8 oracle\u7c7b\u578b\u6570\u636e\u5e93
spring.datasource.druid.driverClassName=oracle.jdbc.OracleDriver
# \u6570\u636e\u6e90\u9a71\u52a8 mysql\u7c7b\u578b\u6570\u636e\u5e93
spring.datasource.druid.driverClassName=com.mysql.cj.jdbc.Driver   
# \u901a\u7528\u914d\u7f6e
# \u6570\u636e\u6e90\u540d\u79f0
spring.datasource.druid.name=MyDruidDataSource
# \u6570\u636e\u6e90\u7c7b\u578b
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
# url
spring.datasource.druid.url=jdbc:oracle:thin:@192.168.22.235:1521:nettest
#spring.datasource.druid.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
# \u7528\u6237
spring.datasource.druid.username=xxxx
# \u5bc6\u7801 \u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u5bc6\u7801\u76f4\u63a5\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528ConfigFilter
spring.datasource.druid.password=xxxx
# \u8fde\u63a5\u6c60\u521d\u59cb\u5316\u5927\u5c0f \u9ed8\u8ba40
spring.datasource.druid.initialSize=20
# \u8fde\u63a5\u6c60\u6700\u5c0f\u6570 \u9ed8\u8ba48
spring.datasource.druid.minIdle=20
# \u8fde\u63a5\u6c60\u6700\u5927\u6570
spring.datasource.druid.maxActive=50
# \u83b7\u53d6\u8fde\u63a5\u65f6\u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2
spring.datasource.druid.maxWait=60000
# \u662f\u5426\u7f13\u5b58preparedStatement(PSCache) \u9ed8\u8ba4false PSCache\u5bf9\u652f\u6301\u6e38\u6807\u7684\u6570\u636e\u5e93\u6027\u80fd\u63d0\u5347\u5de8\u5927\uff0c\u6bd4\u5982\u8bf4oracle\u3002\u5728mysql\u4e0b\u5efa\u8bae\u5173\u95ed
spring.datasource.druid.poolPreparedStatements=true
# \u8981\u542f\u7528PSCache\uff0c\u5fc5\u987b\u914d\u7f6e\u5927\u4e8e0\uff0c\u5f53\u5927\u4e8e0\u65f6\uff0cpoolPreparedStatements\u81ea\u52a8\u89e6\u53d1\u4fee\u6539\u4e3atrue
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=100
# \u7528\u6765\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684sql\uff0c\u8981\u6c42\u662f\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\uff0c\u5e38\u7528select 'x'
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
# \u5355\u4f4d\u79d2\uff0c\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684\u8d85\u65f6\u65f6\u95f4
spring.datasource.druid.validationQueryTimeout=30
# \u7533\u8bf7\u8fde\u63a5\u65f6\u6267\u884cvalidationQuery\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548  \u9ed8\u8ba4true
spring.datasource.druid.testOnBorrow=false
# \u5f52\u8fd8\u8fde\u63a5\u65f6\u6267\u884cvalidationQuery\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548 \u9ed8\u8ba4false
spring.datasource.druid.testOnReturn=false
# \u7533\u8bf7\u8fde\u63a5\u7684\u65f6\u5019\u68c0\u6d4b \u9ed8\u8ba4false\uff0c\u5982\u679c\u7a7a\u95f2\u65f6\u95f4\u5927\u4e8etimeBetweenEvictionRunsMillis\uff0c\u6267\u884cvalidationQuery\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548
spring.datasource.druid.testWhileIdle=true
# \u8fde\u63a5\u4fdd\u6d3b \u9ed8\u8ba4false \u5f53\u4e14\u8fde\u63a5\u6c60\u4e2d\u7684\u8fde\u63a5\u6570\u5728minIdle\u4ee5\u5185\uff0c\u5bf9\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7minEvictableIdleTimeMillis\u7684\u8fde\u63a5\u8fdb\u884c\u4fdd\u6d3b
spring.datasource.druid.keepAlive=true
# \u68c0\u6d4b\u8fde\u63a5\u7a7a\u95f2\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8eminEvictableIdleTimeMillis\u7684\u95f4\u9694\u65f6\u95f4	\u5355\u4f4d\u6beb\u79d2	 \u9ed8\u8ba41\u5206\u949f 
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# \u4fdd\u6301\u7a7a\u95f2\u8fde\u63a5\u4e0d\u88ab\u9a71\u9010\u7684\u6700\u5c0f\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# \u8fc7\u6ee4\u5668\u63d2\u4ef6 \u5e38\u7528\u7684\u63d2\u4ef6\u6709 \u76d1\u63a7\u7edf\u8ba1\u7528\u7684filter:stat \u65e5\u5fd7\u7528\u7684filter:log4j \u9632\u5fa1sql\u6ce8\u5165\u7684filter:wall
spring.datasource.druid.filters=stat,wall,log4j
# \u6570\u636e\u5e93\u8fde\u63a5\u5176\u4ed6\u914d\u7f6e \u5982config.decrypt=false\u8868\u793a\u6570\u636e\u5e93\u5bc6\u7801\u4e0d\u52a0\u5bc6
spring.datasource.druid.connectionProperties=config.decrypt=false

#druid\u76d1\u63a7\u914d\u7f6e
# druid\u76d1\u63a7\u67e5\u770b\u9875\u9762\u7528\u6237\u540d
druid.stat.name=user
# druid\u76d1\u63a7\u67e5\u770b\u9875\u9762\u5bc6\u7801
druid.stat.password=123456
# druid\u76d1\u63a7\u67e5\u770b\u9875\u9762IP\u767d\u540d\u5355 \u4e3a\u7a7a\uff0c\u5219\u5141\u8bb8\u6240\u6709\u8bbf\u95ee
druid.stat.allow=
# druid\u76d1\u63a7\u67e5\u770b\u9875\u9762IP\u9ed1\u540d\u5355 ip\u4e5f\u5728\u767d\u540d\u5355\u4e2d\u5b58\u5728\u65f6\uff0cdeny\u4f18\u5148\u4e8eallow
druid.stat.deny=




# =============== redis\u914d\u7f6e ===============
# \u4e3b\u673aip
spring.redis.cluster.host=192.168.23.67
# \u4e3b\u673a\u7aef\u53e3
spring.redis.cluster.host.port=7000
# \u5bc6\u7801
spring.redis.cluster.password=hzsmkhzsmk
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5 
spring.redis.pool.minIdle=10
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u8fde\u63a5  
spring.redis.pool.maxIdle=20
# \u80fd\u591f\u540c\u65f6\u5efa\u7acb\u7684 \u6700\u5927\u94fe\u63a5\u4e2a\u6570
spring.redis.pool.maxTotal=100
# \u8fde\u63a5\u6c60\u5efa\u7acb\u8fde\u63a5\u7b49\u5f85\u65f6\u95f4\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09 
spring.redis.pool.maxWaitMills=3000
# \u5728\u7a7a\u95f2\u65f6\u68c0\u67e5\u6709\u6548\u6027\uff0c\u9ed8\u8ba4false
spring.redis.pool.testWhileIdle=true
# \u7533\u8bf7\u8fde\u63a5\u65f6\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548
spring.redis.pool.testOnBorrow=false
# \u5f52\u8fd8\u8fde\u63a5\u65f6\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548
spring.redis.pool.testOnReturn=false
#\u8fde\u63a5\u8017\u5c3d\u65f6\u662f\u5426\u963b\u585e\uff0cfalse\u62a5\u5f02\u5e38\uff0ctrue\u963b\u585e\u8d85\u65f6,\u9ed8\u8ba4true
spring.redis.pool.blockWhenExhausted=true
# \u8fde\u63a5\u7684\u6700\u5c0f\u7a7a\u95f2\u65f6\u95f4\uff0c\u8fde\u63a5\u6c60\u4e2d\u8fde\u63a5\u53ef\u7a7a\u95f2\u7684\u65f6\u95f4
spring.redis.pool.minEvictableIdleTimeMillis=60000
# \u91ca\u653e\u626b\u63cf\u7684\u626b\u63cf\u95f4\u9694\uff0c\u5355\u4f4d\u6beb\u79d2\u6570\uff1b\u68c0\u67e5\u4e00\u6b21\u8fde\u63a5\u6c60\u4e2d\u7a7a\u95f2\u7684\u8fde\u63a5,\u628a\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7minEvictableIdleTimeMillis\u6beb\u79d2\u7684\u8fde\u63a5\u65ad\u5f00\uff0c\u76f4\u5230\u8fde\u63a5\u6c60\u4e2d\u7684\u8fde\u63a5\u6570\u5230minIdle\u4e3a\u6b62
spring.redis.pool.timeBetweenEvictionRunsMillis=30000
# \u6bcf\u6b21\u6700\u5927\u8fde\u63a5\u6570
spring.redis.pool.numTestsPerEvictionRun=-1
# \u5f53\u5ba2\u6237\u7aef\u95f2\u7f6e\u591a\u957f\u65f6\u95f4\u540e\u5173\u95ed\u8fde\u63a5
spring.redis.timeout=2000


# =============== \u7ebf\u7a0b\u6c60\u914d\u7f6e ===============
# \u662f\u5426\u5141\u8bb8\u6838\u5fc3\u7ebf\u7a0b\u8d85\u65f6 \u9ed8\u8ba4false
spring.threadpool.allowCoreThreadTimeOut=false
# \u7ebf\u7a0b\u6c60\u5173\u95ed\u65f6\u7b49\u5f85\u5269\u4f59\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\u6700\u5927\u65f6\u957f 	\u5355\u4f4d\u79d2	 \u9ed8\u8ba40\u4e0d\u7b49\u5f85
spring.threadpool.awaitTerminationSeconds=0
# \u6838\u5fc3\u7ebf\u7a0b\u6570 \u9ed8\u8ba41
spring.threadpool.corePoolSize=20
# \u7ebf\u7a0b\u7a7a\u95f2\u65f6\u957f \u5355\u4f4d\u79d2 \u9ed8\u8ba460
spring.threadpool.keepAliveSeconds=60
# \u7ebf\u7a0b\u6700\u5927\u6570 \u9ed8\u8ba4 Integer.MAX_VALUE
spring.threadpool.maxPoolSize=50
# \u4efb\u52a1\u961f\u5217\u5bb9\u91cf \u9ed8\u8ba4Integer.MAX_VALUE
spring.threadpool.queueCapacity=100
# \u7ebf\u7a0b\u7ec4\u540d\u79f0
spring.threadpool.threadGroupName=yourThreadGroupName
# \u7ebf\u7a0b\u540d\u524d\u7f00
spring.threadpool.threadNamePrefix=yourThreadNamePrefix
# \u7ebf\u7a0b\u6c60\u5173\u95ed\u65f6\u662f\u5426\u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210 \u9ed8\u8ba4false
spring.threadpool.waitForJobsToCompleteOnShutdown=false


# =============== activemq\u914d\u7f6e ===============
# url\u5730\u5740
spring.activemq.broker-url=failover:(tcp://192.168.23.164:61616,tcp://192.168.23.214:61616)
# \u7528\u6237\u540d
spring.activemq.password=admin
# \u5bc6\u7801
spring.activemq.user=admin


# =============== kafka\u914d\u7f6e =============== 
# \u6307\u5b9akafka \u4ee3\u7406\u5730\u5740\uff0c\u53ef\u4ee5\u591a\u4e2a
spring.kafka.bootstrap.servers=192.168.23.223:19092,192.168.23.224:19092,192.168.23.225:19092
# \u6307\u5b9a\u6d88\u606fkey\u548cvalue\u7684\u7f16\u89e3\u7801\u65b9\u5f0f
spring.kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# \u751f\u4ea7\u8005
# \u53d1\u9001\u5931\u8d25\u7684\u65f6\u5019\u91cd\u8bd5\u7684\u6b21\u6570
spring.kafka.producer.retries=0
# \u53d1\u7aef\u7b49\u5f85broker\u8fd4\u56de\u63a5\u6536\u7ed3\u679c
spring.kafka.producer.acks=0
# \u53d1\u9001\u7aef\u6279\u91cf\u53d1\u9001\u7684\u7684\u7f13\u5b58\u5927\u5c0f\uff0c\u9ed8\u8ba4\u662f16kB
spring.kafka.producer.batch.size=16384
# \u53d1\u9001\u5ef6\u65f6\uff0c\u9ed8\u8ba4\u5ef6\u65f6\u65f6\u95f4\u662f0s
spring.kafka.producer.linger=100
# \u53d1\u9001\u7aef\u7528\u4e8e\u7f13\u5b58\u6d88\u606f\u7684\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662f\u5b57\u8282\uff0c\u9ed8\u8ba432M
spring.kafka.producer.buffer.memory=33554432

# \u6d88\u8d39\u8005
# \u6307\u5b9a\u9ed8\u8ba4\u6d88\u8d39\u8005group id
spring.kafka.consumer.group.id=test-hello-group
# \u4ece\u5934\u5f00\u59cb\u6d88\u8d39
spring.kafka.consumer.auto.offset.reset=earliest
# \u662f\u5426\u81ea\u52a8\u63d0\u4ea4
spring.kafka.consumer.enable.auto.commit=true
# \u81ea\u52a8\u63d0\u4ea4\u95f4\u9694 \u4e0a\u9762\u914d\u7f6e\u4e3atrue\u624d\u6709\u6548
spring.kafka.consumer.auto.commit.interval=100
# \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4
spring.kafka.consumer.session.timeout=6000
# \u6d88\u8d39\u7ebf\u7a0b\u6570
spring.kafka.consumer.concurrency=10
